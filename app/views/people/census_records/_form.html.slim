= simple_form_for @record, as: :census_record, html: { autocomplete: 'off' } do |form|

  .card.mb-1
    .card-header
      | Census Scope
      .btn-group.float-right#toggle-census-slider
        button.btn type="button" data-orientation="horizontal"
          i.fa.fa-arrows-h
        button.btn type="button" data-orientation="vertical"
          i.fa.fa-arrows-v

    .card-body
      .census-slider-wrapper
        .census-slider.hidden
          = form.input :page_number, as: :integer, input_html: { min: 0, max: 10_000 }
          = form.input :page_side, collection: %w{A B}
          = form.input :line_number, as: :integer, input_html: { min: 0, max: 100 }
          = form.input :county
          = form.input :city, input_html: { id: 'city' }
          = form.input :ward, as: :integer, input_html: { min: 0, max: 10_000 }
          = form.input :enum_dist, as: :integer, input_html: { min: 0, max: 10_000 }
          = form.input :street_house_number, input_html: { autocomplete: 'new-password' }
          = form.input :street_prefix, collection: %w{N S E W}, input_html: { autocomplete: 'new-password' }
          = form.input :street_name, input_html: { id: 'street_name', autocomplete: 'new-password' }
          = form.input :street_suffix, collection: CensusRecord.street_suffix_choices, input_html: { autocomplete: 'new-password' }
          = form.input :apartment_number, input_html: { autocomplete: 'new-password' }
          = form.input :building_id, as: :select, collection: form.object.buildings_on_street, input_html: { id: 'building_id' }
          - unless form.object.building_id
            = form.input :ensure_building, as: :boolean, label: 'Add building with address'
          = form.input :dwelling_number
          = form.input :family_id

  = render 'fields', form: form

  .card.mb-1
    .card-body
      = form.input :notes, as: :text
      .form-actions
        => form.submit 'Save', class: 'btn btn-primary btn-lg'
        span<
          | After saving, add another person:
        =< select_tag 'then', options_for_select([['In this family', 'family'], ['In this dwelling', 'dwelling'], ['On this page', 'page'], ['In this enumeration district', 'enumeration']], params[:then]), prompt: 'Select'
        = yield :extra_buttons